[
  {
    "key": "terminal.shell.path",
    "label": "Shell Path",
    "comments": [
      "Path of shell, $SHELL or PowerShell (on Windows) by default"
    ],
    "schema": {
      "type": "string"
    },
    "default": ""
  },
  {
    "key": "terminal.shell.args",
    "label": "Shell Args",
    "comments": [
      "Arguments of shell command line"
    ],
    "configurable": ["linux", "darwin"],
    "schema": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "recommendations": ["--login"],
    "default": ["--login"]
  },
  {
    "key": "terminal.shell.windowsArgs",
    "label": "Shell Args",
    "comments": [
      "Arguments of shell command line (for Windows)"
    ],
    "configurable": ["win32"],
    "schema": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "default": []
  },
  {
    "key": "terminal.shell.env",
    "label": "Extra Environment Variables",
    "comments": [
      "Extra environment variables"
    ],
    "schema": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "default": {}
  },
  {
    "key": "terminal.shell.extraProfiles",
    "label": "Extra Profiles",
    "comments": [
      "Customize terminal profile",
      "Could override the default 'shell', 'args' and 'env'"
    ],
    "schema": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "shell": {
            "type": "string"
          },
          "args": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "env": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "default": []
  },
  {
    "key": "terminal.shell.integration",
    "label": "Enable Shell Integration",
    "comments": [
      "Allow the terminal to inject scripts into the shell for enhanced functionality"
    ],
    "schema": {
      "type": "boolean"
    },
    "default": true
  },
  {
    "key": "terminal.shell.highlightErrors",
    "label": "Highlight Command Errors",
    "comments": [
      "Highlight commands that were executed with errors",
      "Requires Shell Integration to be enabled"
    ],
    "schema": {
      "type": "boolean"
    },
    "default": true
  },
  {
    "key": "terminal.shell.autoCompletion",
    "label": "Auto Trigger Completion",
    "comments": [
      "Trigger intelligent completion automatically when inputing",
      "Requires Shell Integration to be enabled"
    ],
    "schema": {
      "type": "boolean"
    },
    "default": true
  },
  {
    "key": "terminal.external.openPathIn",
    "label": "Open External Path In",
    "comments": [
      "Specify how to open external paths",
      "Options: 'new-tab' or 'new-window'"
    ],
    "schema": {
      "type": "string",
      "enum": ["new-tab", "new-window"]
    },
    "default": "new-tab"
  },
  {
    "key": "terminal.external.explorer",
    "label": "External Explorer",
    "comments": [
      "Command for starting external file manager (or code editor, etc)",
      "Use ${directory} to interpolate the variable at runtime",
      "Open in system file manager by default"
    ],
    "schema": {
      "type": "string"
    },
    "recommendations": ["open -a \"Visual Studio Code\" \"${directory}\""],
    "default": ""
  },
  {
    "key": "terminal.external.remoteExplorer",
    "label": "Remote External Explorer",
    "comments": [
      "Command for starting remote external file manager",
      "Use ${directory} or ${remote} to interpolate these variables at runtime",
      "Skip by default"
    ],
    "schema": {
      "type": "string"
    },
    "recommendations": ["/usr/local/bin/code --folder-uri \"vscode-remote://ssh-remote+${remote}${directory}\""],
    "default": ""
  },
  {
    "key": "terminal.tab.liveCwd",
    "label": "Enable Live CWD",
    "comments": [
      "Support dynamic \\w and \\W in formatting",
      "Disabling this feature will slightly improved performance",
      "This will be automatically disabled when shell integration is enabled"
    ],
    "schema": {
      "type": "boolean"
    },
    "default": true
  },
  {
    "key": "terminal.tab.liveIcon",
    "label": "Enable Live Icon",
    "comments": [
      "Support real-time icon (currently for macOS only)",
      "Disabling this feature will slightly improved performance"
    ],
    "configurable": ["darwin"],
    "schema": {
      "type": "boolean"
    },
    "default": true
  },
  {
    "key": "terminal.tab.livePreview",
    "label": "Enable Live Preview",
    "comments": [
      "Preview latest output in list",
      "It will not work if the tab list is at the top or bottom"
    ],
    "schema": {
      "type": "boolean"
    },
    "default": false
  },
  {
    "key": "terminal.tab.titleFormat",
    "label": "Tab Title Format",
    "comments": [
      "Title format of terminal tab in grammer of bash prompt",
      "It will not work if title is set from OSC 0 or OSC 2",
      "Supported identifiers: \\h \\H \\l \\u \\v \\w \\W"
    ],
    "schema": {
      "type": "string"
    },
    "default": "\\v"
  },
  {
    "key": "terminal.view.linkModifier",
    "label": "Link Modifier",
    "comments": [
      "Keyboard modifier for opening link by click"
    ],
    "schema": {
      "type": "string",
      "enum": ["any", "CmdOrCtrl", "Alt"]
    },
    "default": "any"
  },
  {
    "key": "terminal.view.rendererType",
    "label": "Renderer Type",
    "comments": [
      "Specify how to render the terminal",
      "Options: 'dom', 'canvas' or 'webgl'",
      "'webgl' will fallback to 'canvas' when transparency is enabled"
    ],
    "schema": {
      "type": "string",
      "enum": ["dom", "canvas", "webgl"]
    },
    "default": "webgl"
  },
  {
    "key": "terminal.view.frameType",
    "label": "Frame Type",
    "comments": [
      "Frame type of window",
      "Options: 'system', 'system-with-menu' or 'immersive'",
      "Changing this setting will take effect after reloading the app"
    ],
    "schema": {
      "type": "string",
      "enum": ["system", "system-with-menu", "immersive"]
    },
    "reload": true,
    "default": "immersive"
  },
  {
    "key": "terminal.view.tabListPosition",
    "label": "Tab List Position",
    "comments": [
      "Position of terminal tab list"
    ],
    "schema": {
      "type": "string",
      "enum": ["left", "right", "top", "bottom"]
    },
    "default": "left"
  },
  {
    "key": "terminal.style.opacity",
    "label": "Background Opacity",
    "comments": [
      "Background opacity of window",
      "It will not work if RGBA background is specified in theme file",
      "Or when using the system frame"
    ],
    "schema": {
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "default": 0.9
  },
  {
    "key": "terminal.style.vibrancy",
    "label": "Vibrancy Effect",
    "comments": [
      "Specify whether or not to enable the vibrancy effect for window (currently for macOS only)"
    ],
    "configurable": ["darwin"],
    "schema": {
      "type": "boolean"
    },
    "default": true
  },
  {
    "key": "terminal.style.vibrancyOpacity",
    "label": "Vibrancy Background Opacity",
    "comments": [
      "Background opacity of window with vibrancy effect"
    ],
    "configurable": ["darwin"],
    "schema": {
      "type": "number",
      "minimum": 0,
      "maximum": 1
    },
    "default": 0.667
  },
  {
    "key": "terminal.style.fontSize",
    "label": "Font Size",
    "comments": [
      "Font size for window in pixels"
    ],
    "schema": {
      "type": "integer",
      "minimum": 12
    },
    "default": 14
  },
  {
    "key": "terminal.style.fontFamily",
    "label": "Font Family",
    "comments": [
      "Font family names for window"
    ],
    "schema": {
      "type": "string"
    },
    "default": "Fira Code, Consolas, Monaco, Andale Mono, Ubuntu Mono"
  },
  {
    "key": "terminal.style.fontLigatures",
    "label": "Enable Font Ligatures",
    "comments": [
      "Enable font ligatures (if specified font family supports, like Fira Code or Iosevka)"
    ],
    "schema": {
      "type": "boolean"
    },
    "default": false
  },
  {
    "key": "terminal.style.cursorStyle",
    "label": "Cursor Style",
    "comments": [
      "Cursor style for terminals"
    ],
    "schema": {
      "type": "string",
      "enum": ["block", "bar", "underline"]
    },
    "default": "block"
  },
  {
    "key": "terminal.theme.name",
    "label": "Theme Name",
    "comments": [
      "File name of built-in theme or files in `themes/` folder",
      "Support `OneHalfDark` or `OneHalfLight` by default"
    ],
    "schema": {
      "type": "string"
    },
    "recommendations": ["OneHalfDark", "OneHalfLight"],
    "default": "OneHalfDark"
  },
  {
    "key": "terminal.theme.customization",
    "label": "Custom Theme Colors",
    "comments": [
      "Overwrite colors in the theme file"
    ],
    "schema": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "default": {}
  },
  {
    "key": "terminal.addon.includes",
    "label": "Enabled Addons",
    "comments": [
      "List of enabled addon name"
    ],
    "schema": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "recommendations": ["addon-manager", "cleaner", "cli", "clippy", "editor", "git", "iterm2", "l10n-ext", "launcher", "power-mode", "preference", "proxy", "settings", "sync", "theme", "updater"],
    "default": ["addon-manager", "cleaner", "cli", "editor", "git", "iterm2", "l10n-ext", "launcher", "power-mode", "preference", "proxy", "settings", "sync", "theme", "updater"]
  }
]
